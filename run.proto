// Run a job inside a container.
//
// This request is equivalent to atomically spawning a job and immediately
// linking to it.
//
// ### Request
//
// The specified script is interpreted by `/bin/bash` inside the container.
//
// * `handle`: Container handle.
// * `script`: Script to execute.
// * `privileged`: Whether to run the script as root or not.
// * `rlimits`: Resource limits (see `ResourceLimits`).
// * `discard_output`: Do not collect stdout/stderr in memory.
//
// ### Response
//
// * `exit_status`: Exit status of the job.
// * `stdout`: Standard out produced by the job.
// * `stderr`: Standard error produced by the job.
//
// ### Errors
//
// * When `handle` does not refer to a container.
//
// ### Definition
//

package warden;

import "resource_limits.proto";
import "info.proto";

message RunRequest {
  required string handle = 1;

  required string script = 2;
  optional bool privileged = 3 [default = false];
  optional ResourceLimits rlimits = 4;

  optional bool discard_output = 5 [default = false];

  optional string log_tag = 6;
}

message RunResponse {
  optional uint32 exit_status = 1;
  optional string stdout = 2;
  optional string stderr = 3;
  optional InfoResponse info = 4;
}
